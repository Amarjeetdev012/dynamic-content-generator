<!DOCTYPE html>
<html>

<head>
    <title>Tagify Example</title>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <script src="https://cdn.jsdelivr.net/npm/@yaireo/tagify"></script>
    <script src="https://cdn.jsdelivr.net/npm/@yaireo/tagify/dist/tagify.polyfills.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/@yaireo/tagify/dist/tagify.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@yaireo/tagify@4.2.0/dist/tagify.css" />
    <style>
        .customSuggestionsList>div {
            max-height: 300px;
            min-height: 50px;
            border: 2px solid pink;
            overflow: auto;
        }

        .customSuggestionsList .empty {
            color: #999;
            font-size: 20px;
            text-align: center;
            padding: 1em;
        }
    </style>
</head>

<body>
    <form action="/tagconverter" method="post">
        <label for="mixedinput">Mixed tags and text </label>
        <input type="text" id="mixedinput" name="mixedinput" />
        <button type="submit">Submit</button>
    </form>
    <script>
        var input = document.querySelector('#mixedinput'),
            // init Tagify script on the above inputs
            tagify = new Tagify(input, {
                mode: "mix",
                pattern: /@|#/,
                tagTextProp: 'text',
                whitelist: ["CHIP - 8", "Clean", "COMPASS", "MSL", "MUMPS", "Mystic Programming L"],
                tagTextProp: 'text',
                dropdown: {
                    position: "manual",
                    position: 'text',
                    autoComplete: true,
                    maxItems: Infinity,
                    enabled: 1,
                    classname: "customSuggestionsList"
                },
                enforceWhitelist: false
            })

        tagify.on("dropdown:show", onSuggestionsListUpdate)
            .on("dropdown:hide", onSuggestionsListHide)
            .on('dropdown:scroll', onDropdownScroll)

        renderSuggestionsList()  // defined down below

        // ES2015 argument destructuring
        function onSuggestionsListUpdate({ detail: suggestionsElm }) {
            console.log('suggestionsElm', suggestionsElm)
        }
        function onSuggestionsListHide() {
            console.log("hide dropdown")
        }
        function onDropdownScroll(e) {
            console.log(e.detail)
        }
        function renderSuggestionsList() {
            tagify.dropdown.show()
            tagify.DOM.scope.parentNode.appendChild(tagify.DOM.dropdown)
        }
        tagify.on('add', function () {
            renderSuggestionsList();
        });
        tagify.on("input", function (event) {
            console.log('event event ', event);
            if (event.key === "Enter") {

            }
        });
    </script>
</body>

</html>